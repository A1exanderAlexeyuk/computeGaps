% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prevalence_analysis_db.R
\name{analyze_prevalence_from_tsv_db}
\alias{analyze_prevalence_from_tsv_db}
\title{Analyze Prevalence from TSV with Database Storage}
\usage{
analyze_prevalence_from_tsv_db(
  tsv_file_path,
  connection,
  cohort_database_schema,
  cohort_table_name = "cohort",
  results_table_name = "prevalence_analysis_results",
  cdm_database_schema = NULL,
  overwrite_results = TRUE,
  create_indexes = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{tsv_file_path}{Character. Path to the TSV file containing the analysis data}

\item{connection}{Database connection object (DatabaseConnector or DBI)}

\item{cohort_database_schema}{Character. Schema name where cohort table and results will be stored}

\item{cohort_table_name}{Character. Name of the cohort table (default: "cohort")}

\item{results_table_name}{Character. Name for the results table (default: "prevalence_analysis_results")}

\item{cdm_database_schema}{Character. Schema name for CDM tables (default: same as cohort_database_schema)}

\item{overwrite_results}{Logical. Whether to overwrite existing results table (default: TRUE)}

\item{create_indexes}{Logical. Whether to create indexes on results table (default: TRUE)}

\item{verbose}{Logical. Whether to print progress messages (default: TRUE)}
}
\value{
Character. Name of the created results table
}
\description{
This function reads TSV data containing cohort and diagnostic test information,
performs prevalence analysis, and stores results in the database.
}
\examples{
\dontrun{
# Basic usage
results_table <- analyze_prevalence_from_tsv_db(
  tsv_file_path = "analysis_data.tsv",
  connection = connection,
  cohort_database_schema = "results",
  cohort_table_name = "cohort"
)

# Advanced usage with custom parameters
results_table <- analyze_prevalence_from_tsv_db(
  tsv_file_path = "analysis_data.tsv",
  connection = connection,
  cohort_database_schema = "results",
  cohort_table_name = "my_cohort",
  results_table_name = "custom_prevalence_results",
  cdm_database_schema = "cdm",
  overwrite_results = FALSE,
  verbose = TRUE
)
}

}
